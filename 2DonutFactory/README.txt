DonutFactory.java:
Назначение: Определяет основную функциональность создания различных типов пончиков и управления их количеством.
Ключевые компоненты:
Интерфейс Donut - Представляет общий пончик с методом eat().
Перечисление DonutTypes: Определяет типы доступных пончиков - Вишневый, Шоколадный и Миндальный.
Классы пончиков - Конкретные классы (CherryDonut, ChocolateDonut, AlmondDonut), реализующие интерфейс Donut, каждый из которых переопределяет метод eat(), чтобы выводить сообщение, специфичное для типа пончика.
Класс DonutFactory - Управляет созданием пончиков и подсчётом их количества. Включает методы для получения пончика определённого типа, случайного пончика, сброса счётчиков пончиков и съедания 100 случайных пончиков, обновляя счётчики соответственно.

DonutFactoryGUI.java:
Назначение: Обеспечивает графический интерфейс пользователя для взаимодействия с DonutFactory, позволяя пользователю есть случайные пончики, есть 100 случайных пончиков за раз и сбрасывать счётчики пончиков.
Ключевые компоненты:
Класс DonutFactoryGUI - Инициализирует UI и связывает действия с кнопками для взаимодействия с DonutFactory.
Элементы UI - Включают JFrame для окна приложения, JTextArea для отображения количества пончиков и JButton для действий ("Съесть случайный пончик", "Съесть 100 случайных пончиков", "Забыть про пончики").
ActionListeners - Присоединены к кнопкам для определения поведения при их нажатии, например, съедание случайного пончика, съедание 100 случайных пончиков или сброс счётчиков.
Метод updateDonutCounts - Обновляет JTextArea текущим количеством каждого типа пончиков после любого действия.
 
 
Скомпилируйте и запустите DonutFactoryGUI.java для старта приложения.
Пользователь может взаимодействовать с фабрикой пончиков через GUI, нажимая на предоставленные кнопки для того, чтобы есть пончики или сбрасывать счётчики. Текущее количество каждого типа пончика отображается в текстовом поле.
